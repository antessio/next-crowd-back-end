name: Build back-end application
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.9
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 22
        uses: actions/setup-java@v2
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Start Docker Compose for PostgreSQL
        run: docker-compose -f ./infrastructure/docker/postgres.yml up -d
        # Replace 'path/to/docker-compose.yml' with the actual path to your Docker Compose file

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if docker-compose exec postgresql pg_isready -U nextcrowd_root; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
      - name: Run tests
        run: mvn test
      - name: Shut down Docker Compose
        if: always()
        run: docker-compose -f ./infrastructure/docker/postgres.yml down
